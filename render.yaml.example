services:
  - type: web
    name: newsletter-platform
    env: node
    buildCommand: npm install && npm run build
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      # Authentication
      - key: NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
        value: pk_test_placeholder_clerk_publishable_key
      - key: CLERK_SECRET_KEY
        value: sk_test_placeholder_clerk_secret_key
      # AWS SES Configuration
      - key: AWS_ACCESS_KEY
        value: AKIA_PLACEHOLDER_KEY_ID
      - key: AWS_SECRET_KEY
        value: PLACEHOLDER_AWS_SECRET_ACCESS_KEY_VALUE
      # Stripe Configuration  
      - key: STRIPE_PUBLISHABLE_KEY
        value: pk_test_placeholder_stripe_key
      - key: STRIPE_SECRET_KEY
        value: sk_test_placeholder_stripe_key
      - key: STRIPE_WEBHOOK_SECRET
        value: whsec_placeholder_webhook_secret
      # Application Configuration  
      - key: NEXT_PUBLIC_WEBSITE_URL
        value: ${RENDER_EXTERNAL_URL}
      - key: JWT_SECRET_KEY
        value: replace_with_64_character_random_string
      - key: MONGODB_URI
        value: mongodb+srv://placeholder:password@cluster.mongodb.net/database
      - key: ZEROBOUNCE_API_KEY
        value: placeholder_zerobounce_api_key
    healthCheckPath: /
    autoDeploy: true

# ⚠️ SECURITY NOTICE ⚠️
# 1. NEVER commit real credentials in this file
# 2. Setup process:
#    a. Copy this file to render.yaml (ensure render.yaml is in .gitignore)
#    b. Go to Render Dashboard -> Environment Variables
#    c. Add each secret using Render's secure environment variables
#    d. NEVER paste real credentials into render.yaml
# 3. Security best practices:
#    - Generate new production credentials for deployment
#    - Rotate secrets periodically
#    - Use least-privilege access for all credentials
#    - Enable audit logging where available
#    - Monitor for unauthorized access attempts
